-- main.lua Main code for mqtt connections and set mode of Node
 

-- Pin mode for Node Actuator station 
-- You can select whatever pin you need, reference nodeMCU GPIO
    gpio.mode(4, gpio.OUTPUT)
        gpio.write(4, gpio.LOW)
    gpio.mode(2, gpio.OUTPUT)
        gpio.write(2, gpio.LOW)
        
-- Start MQTT conection to server
-- We create a client named cliente because client is already defined by API
-- MQTT credentials are loader and modified on credentials file
    print("Starting Connection mqtt")
    cliente = mqtt.Client(mqtt_ip, mqtt_keepalive, mqtt_user, mqtt_password, 1)
    print("Client started")
    cliente:on("offline", function(client) print ("offline") end)
-- Set up LAST WILL and Testament
    cliente:lwt("/lwt", "offline", 0, 0)
    print("lwt set")
 -- Start connection with server and send connected.
    cliente:connect(vmqtt_ip,mqtt_puerto,0,0, function(client)
    print("Connected")

    
-- Subscribe/publish to local MQTT server topics /**
    client:subscribe("/<topic here>", 0, function(client) print("subscribe /hogar done") end)
   
    client:subscribe("/<topic here>", 0, function(client) print("subscribe /led done") end)
    
    client:publish("/<topic here>", "Hello hogar", 0, 0, function(client) print("message sended") end)
    
    conectado=1;
    end)



-- On Data received we go for 1 if node should change states to ON and 0 viceversa
cliente:on("message", function(conn, topic, data)
  print(topic .. ":" )
  if data ~= nil then
    print(data)
  end
  if data == "0" then
gpio.write(4, gpio.LOW)
gpio.write(2, gpio.LOW)
  end
  if data == "1" then
gpio.write(4, gpio.HIGH)
gpio.write(2, gpio.HIGH)
  end 
end)
